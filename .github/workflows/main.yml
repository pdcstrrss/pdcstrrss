name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  workspace:
    runs-on: ubuntu-latest

    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      GH_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}
      GH_OAUTH_CLIENT_SECRET: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}
      BASE_URL: ${{ secrets.BASE_URL }}
      SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}

    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 16.x
      - uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v2
      - uses: bahmutov/npm-install@v1
      - run: npx rimraf apps/web-remix/{public/build,netlify/functions/server/build}
      - run: npm run generate
      - run: npm run typecheck
      - run: npm run lint
      - run: npm run test
      - run: npm run build
      - run: npx rimraf node_modules/.prisma/client/libquery_engine-darwin-arm64.dylib.node
      - name: Deploy production to Netlify
        if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/develop'
        uses: nwtgck/actions-netlify@v1.2
        with:
          deploy-message: ${{ github.event.head_commit.message }}
          production-branch: main
          production-deploy: true
          publish-dir: ./apps/web-remix/public
          functions-dir: ./apps/web-remix/netlify/functions
          netlify-config-path: ./apps/web-remix/netlify.toml
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
        timeout-minutes: 2

      - name: Create Sentry release
        uses: getsentry/action-release@v1
        if: github.ref == 'refs/heads/main'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
