name: CI
on:
  push:
    branches:
      - main
  pull_request:

jobs:
  prep:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: nrwl/nx-set-shas@v3
      - uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci --force

  build:
    runs-on: ubuntu-latest
    needs: prep
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL }}
      GH_OAUTH_CLIENT_ID: ${{ secrets.GH_OAUTH_CLIENT_ID }}
      GH_OAUTH_CLIENT_SECRET: ${{ secrets.GH_OAUTH_CLIENT_SECRET }}
      AUTH_SECRET: ${{ secrets.AUTH_SECRET }}
      ASTROAUTH_SECRET: ${{ secrets.ASTROAUTH_SECRET }}
      ASTROAUTH_URL: ${{ secrets.ASTROAUTH_URL }}
      BASE_URL: ${{ secrets.BASE_URL }}
      SIGNING_SECRET: ${{ secrets.SIGNING_SECRET }}
      SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci --force
      - run: npm run generate

      - run: npm run build
      - name: Deploy to production
        if: github.ref == 'refs/heads/main'
        run: npm run deploy -- --prod
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: Deploy to preview
        if: github.ref != 'refs/heads/main'
        run: npm run deploy
        env:
          NETLIFY_AUTH_TOKEN: ${{ secrets.NETLIFY_AUTH_TOKEN }}
          NETLIFY_SITE_ID: ${{ secrets.NETLIFY_SITE_ID }}
      - name: Create Sentry release
        uses: getsentry/action-release@v1
        if: github.ref == 'refs/heads/main'
        env:
          SENTRY_AUTH_TOKEN: ${{ secrets.SENTRY_AUTH_TOKEN }}
          SENTRY_ORG: ${{ secrets.SENTRY_ORG }}
          SENTRY_PROJECT: ${{ secrets.SENTRY_PROJECT }}
        with:
          environment: production
          ignore_empty: true

  test:
    runs-on: ubuntu-latest
    needs: prep
    env:
      DATABASE_URL: ${{ secrets.DATABASE_URL_TEST }}
    steps:
      - uses: actions/setup-node@v3
        with:
          node-version: 18.x
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: bahmutov/npm-install@v1
        with:
          install-command: npm ci --force
      - name: Reset test database
        run: npx nx run database:push:reset
      - run: npm run typecheck
      - run: npm run lint
      - run: npm run test
