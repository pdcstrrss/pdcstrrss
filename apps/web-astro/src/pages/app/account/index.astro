---
import { clsx } from 'clsx';
import { getUserSponsorship } from '@pdcstrrss/core';
import Page from '@/components/page/Page.astro';
import { getUserFromRequest, getUserAccountByProvider } from '@/lib/useUser';
import Layout from '@/layouts/Layout.astro';
import SignIn from '@/components/auth/SignIn.astro';

const { request } = Astro;
const user = await getUserFromRequest({ request });
const { access_token: accessToken } = (await getUserAccountByProvider({ user, provider: 'github' })) || {};
const sponsorship = await getUserSponsorship({ accessToken }).catch(() => null);
const sponsorOrMember = !!sponsorship?.sponsor || !!sponsorship?.member;
---

<Layout>
  <Page title={user ? 'Account' : 'Create an account'}>
    <div class="page-account-container">
      <div class={clsx('card clear-inner-space', { 'card-success': !!user })} inert={user ? 'true' : undefined}>
        <div class="card-header">
          <h2 class="h4">{user ? 'Logged in' : 'Login'}</h2>
        </div>
        <div class="card-body">
          {
            user ? (
              <p>
                Great! You've already logged in with GitHub. This way you can add 3 RSS podcast feeds and listen to the
                episodes.
              </p>
            ) : (
              <p>Login with GitHub to add 3 RSS podcast feeds.</p>
            )
          }
        </div>
        <div class="card-footer">
          <SignIn class={clsx('button', { 'button-success disabled': !!user })} provider="github" type="button">
            <svg>
              <use xlink:href={user ? '#check' : '#github'}></use>
            </svg>
            {user ? 'Logged in' : 'Login'} with GitHub
          </SignIn>
        </div>
        <div class="card-badge">
          {
            user ? (
              <svg class="card-badge-icon">
                <use xlink:href="#check" />
              </svg>
            ) : (
              <div class="card-badge-text">1</div>
            )
          }
        </div>
      </div>
      <div
        class={clsx('card clear-inner-space', { 'card-success': sponsorOrMember })}
        inert={sponsorOrMember ? 'true' : undefined}
      >
        <div class="card-header">
          <h2 class="h4">Sponsor</h2>
        </div>
        <div class="card-body">
          {
            sponsorOrMember ? (
              <p>Thank you for sponsoring PDCSTRRSS! With your support, we can keep our servers running.</p>
            ) : (
              <p>
                Support PDCSTRRSS, starting at only <strong>$2 / month</strong> via GitHub sponsors, and add{' '}
                <strong>unlimited</strong> RSS podcast feeds.
              </p>
            )
          }
        </div>
        <div class="card-footer">
          <SignIn
            class={clsx('button', {
              'button-success': sponsorOrMember,
              'button-fuchsia': !sponsorOrMember,
              disabled: user && sponsorOrMember,
            })}
            provider="github"
            type="button"
            options={{ callbackUrl: '/app/episodes' }}
          >
            <svg>
              <use xlink:href={sponsorOrMember ? '#check' : '#heart'}></use>
            </svg>
            Sponsor{user ? 'ing' : ''} via GitHub
          </SignIn>
        </div>
        <div class="card-badge">
          {
            sponsorOrMember ? (
              <svg class="card-badge-icon">
                <use xlink:href="#check" />
              </svg>
            ) : (
              <div class="card-badge-text">2</div>
            )
          }
        </div>
      </div>
    </div>
  </Page>
</Layout>

<style>
  .page-account-container {
    display: grid;
    grid-template-columns: 1fr;
    gap: calc(var(--space) * 2);
  }

  @media (min-width: 1000px) {
    .page-account-container {
      grid-template-columns: 1fr 1fr;
    }
  }
</style>
